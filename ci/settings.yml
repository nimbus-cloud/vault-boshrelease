---
meta:
  name:    vault
  target:  pipes
  url:     https://pipes.starkandwayne.com

  initial_version: 0.2.1

  bosh-lite:
    target: https://10.200.131.9:25555
    username: ((thunder-dome.username))
    password: ((thunder-dome.password))
    cacert:   ((thunder-dome.ca-certificate))

  aws:
    access_key: ((cfcommunity.access))
    secret_key: ((cfcommunity.secret))

  git:
    name:  Stark & Wayne CI Bot
    email: ci@starkandwayne.com

  github:
    owner:  cloudfoundry-community
    repo:   vault-boshrelease
    branch: master
    private_key:  ((github.private-key))
    access_token: ((github.access-token))

  shout:
    url:      http://10.200.131.1:7109
    username: ops
    password: (( vault "secret/buffalo/lab/concourse/shout/ops:password" ))

resource_types:
  - name: hashicorp-release
    type: docker-image
    source:
      repository: starkandwayne/hashicorp-release-resource

resources:
  - name: vault
    type: hashicorp-release
    source:
      project: vault

groups:
  - name: blobs
    jobs: [vault]

jobs:
  - name: vault
    public: true
    plan:
      - aggregate:
          - { get: git }
          - { get: vault, trigger: true, params: { regexp: "linux_amd64" }}
      - task: update-vault
        config:
          image_resource:
            type: docker-image
            source:
              repository: (( grab meta.image.name ))
              tag:        (( grab meta.image.tag ))
          platform: linux
          inputs:
            - name: git
            - name: vault
          outputs:
            - name: pushme
          run:
            path: ./git/ci/scripts/update-blob
          params:
            REPO_ROOT:   git
            REPO_OUT:    pushme
            BLOB_DIR:    vault
            BLOB_NAME:   vault
            BLOB_BINARY: vault_*_linux_amd64.zip
            BLOB_URL:    https://github.com/hashicorp/vault
            BLOB_CLEANUP:     vault/vault_.*_linux_amd64.zip
            BLOB_DESTINATION: vault/vault_${VERSION}_linux_amd64.zip
            AWS_ACCESS_KEY: (( grab meta.aws.access_key ))
            AWS_SECRET_KEY: (( grab meta.aws.secret_key ))
            BRANCH:         (( grab meta.github.branch ))
        on_success:
          put: notify
          params:
            topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
            message: updated Vault (based on upstream release).
            ok:      yes
            link:    (( grab meta.shout.links.build ))
        on_failure:
          put: notify
          params:
            topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
            message: failed to update Vault (from upstream release).
            ok:      no
            link:    (( grab meta.shout.links.build ))
      - put: git
        params:
          rebase: true
          repository: pushme/git
        on_success:
          put: notify
          params:
            topic:   (( concat meta.shout.topic "-new-vault" ))
            method:  announce
            message: A new upstream version of Vault now available on master branch.
            link:    (( grab meta.shout.links.pipeline ))
